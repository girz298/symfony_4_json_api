security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    encoders:
        Symfony\Component\Security\Core\User\User: plaintext
        App\Entity\API\User: plaintext
    role_hierarchy:
        IS_AUTHENTICATED_FULLY: IS_AUTHENTICATED_ANONYMOUSLY
    providers:
        chain_provider:
            chain:
                providers: [in_memory, our_db_provider]
        in_memory:
            memory:
                users:
                    admin:
                        password: admin
                        roles: 'IS_AUTHENTICATED_FULLY'
        our_db_provider:
            entity:
                class: App\Entity\API\User
                property: username
        jwt:
            lexik_jwt: ~
    firewalls:
        token:
            provider: chain_provider
            pattern:  ^/api/token
            stateless: true
            anonymous: true
            form_login:
                check_path:               /api/token
                success_handler:          lexik_jwt_authentication.handler.authentication_success
                failure_handler:          lexik_jwt_authentication.handler.authentication_failure
                require_previous_session: false
        token_refresh:
            pattern:  ^/api/token/refresh
            stateless: true
            anonymous: true
        api_docs:
            pattern: ^/api/docs
            anonymous: true
        api:
            provider: jwt
            pattern:   ^/api
            stateless: true
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator
    access_control:
        - { path: ^/api/token, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/token/refresh, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/docs, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api,       roles: IS_AUTHENTICATED_FULLY }